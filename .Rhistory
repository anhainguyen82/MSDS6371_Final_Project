row.names(SummaryStat) <- c("MonthlyInco", "Age", "MonthlyRate", "DailyRate", "TotWorkExp")
SummaryStat <- matrix(ncol = 6, nrow = 0)
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyInco))
SummaryStat <- rbind(SummaryStat, summary(df$Age))
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyRate))
SummaryStat <- rbind(SummaryStat, summary(df$DailyRate))
SummaryStat <- rbind(SummaryStat, summary(df$TotWorkExp))
SummaryStat <- as.data.frame(SummaryStat)
row.names(SummaryStat) <- c("MonthlyInco", "Age", "MonthlyRate", "DailyRate", "TotWorkExp")
OverTimeTable <- as.data.frame(table(df$OverTime))
OverTimeTable <- data.frame(OverTimeTable[,-1], row.names = OverTimeTable[,1])
JobRoleTable <- as.data.frame(table(df$JobRole))
JobRoleTable <- data.frame(OverTimeTable[,-1], row.names = OverTimeTable[,1])
SummaryStat
OverTimeTable
JobRoleTable
hist(df$MonthlyInco)
hist(df$Age)
SummaryStat <- matrix(ncol = 6, nrow = 0)
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyInco))
SummaryStat <- rbind(SummaryStat, summary(df$Age))
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyRate))
SummaryStat <- rbind(SummaryStat, summary(df$DailyRate))
SummaryStat <- rbind(SummaryStat, summary(df$TotWorkExp))
SummaryStat <- as.data.frame(SummaryStat)
row.names(SummaryStat) <- c("MonthlyInco", "Age", "MonthlyRate", "DailyRate", "TotWorkExp")
OverTimeTable <- as.data.frame(table(df$OverTime))
OverTimeTable <- data.frame(OverTimeTable[,-1], row.names = OverTimeTable[,1])
JobRoleTable <- as.data.frame(table(df$JobRole))
JobRoleTable <- data.frame(JobRoleTable[,-1], row.names = JobRoleTable[,1])
SummaryStat
OverTimeTable
JobRoleTable
hist(df$MonthlyInco)
hist(df$Age)
OverTimeTable <- as.data.frame(table(df$OverTime))
OverTimeTable
data.frame(OverTimeTable[,-1])
data.frame(OverTimeTable[,1])
(OverTimeTable[,1])
(OverTimeTable[,-1])
SummaryStat <- matrix(ncol = 6, nrow = 0)
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyInco))
SummaryStat <- rbind(SummaryStat, summary(df$Age))
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyRate))
SummaryStat <- rbind(SummaryStat, summary(df$DailyRate))
SummaryStat <- rbind(SummaryStat, summary(df$TotWorkExp))
SummaryStat <- as.data.frame(SummaryStat)
row.names(SummaryStat) <- c("MonthlyInco", "Age", "MonthlyRate", "DailyRate", "TotWorkExp")
OverTimeTable <- as.data.frame(table(df$OverTime))
OverTimeTable <- OverTimeTable[,-1] %>% row.names = OverTimeTable[,1]
SummaryStat <- matrix(ncol = 6, nrow = 0)
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyInco))
SummaryStat <- rbind(SummaryStat, summary(df$Age))
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyRate))
SummaryStat <- rbind(SummaryStat, summary(df$DailyRate))
SummaryStat <- rbind(SummaryStat, summary(df$TotWorkExp))
SummaryStat <- as.data.frame(SummaryStat)
row.names(SummaryStat) <- c("MonthlyInco", "Age", "MonthlyRate", "DailyRate", "TotWorkExp")
OverTimeTable <- as.data.frame(table(df$OverTime))
OverTimeTable <- data.frame(OverTimeTable[,-1], row.names = OverTimeTable[,1], col.names <- "Freq")
JobRoleTable <- as.data.frame(table(df$JobRole))
JobRoleTable <- data.frame(JobRoleTable[,-1], row.names = JobRoleTable[,1])
SummaryStat
OverTimeTable
JobRoleTable
hist(df$MonthlyInco)
hist(df$Age)
SummaryStat <- matrix(ncol = 6, nrow = 0)
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyInco))
SummaryStat <- rbind(SummaryStat, summary(df$Age))
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyRate))
SummaryStat <- rbind(SummaryStat, summary(df$DailyRate))
SummaryStat <- rbind(SummaryStat, summary(df$TotWorkExp))
SummaryStat <- as.data.frame(SummaryStat)
row.names(SummaryStat) <- c("MonthlyInco", "Age", "MonthlyRate", "DailyRate", "TotWorkExp")
OverTimeTable <- as.data.frame(table(df$OverTime))
OverTimeTable <- data.frame(OverTimeTable[,-1], row.names = OverTimeTable[,1])
col.names(OverTimeTable) = "Freq"
SummaryStat <- matrix(ncol = 6, nrow = 0)
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyInco))
SummaryStat <- rbind(SummaryStat, summary(df$Age))
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyRate))
SummaryStat <- rbind(SummaryStat, summary(df$DailyRate))
SummaryStat <- rbind(SummaryStat, summary(df$TotWorkExp))
SummaryStat <- as.data.frame(SummaryStat)
row.names(SummaryStat) <- c("MonthlyInco", "Age", "MonthlyRate", "DailyRate", "TotWorkExp")
OverTimeTable <- as.data.frame(table(df$OverTime))
OverTimeTable <- data.frame(OverTimeTable[,-1], row.names = OverTimeTable[,1])
col.names(OverTimeTable) = c("Freq")
SummaryStat <- matrix(ncol = 6, nrow = 0)
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyInco))
SummaryStat <- rbind(SummaryStat, summary(df$Age))
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyRate))
SummaryStat <- rbind(SummaryStat, summary(df$DailyRate))
SummaryStat <- rbind(SummaryStat, summary(df$TotWorkExp))
SummaryStat <- as.data.frame(SummaryStat)
row.names(SummaryStat) <- c("MonthlyInco", "Age", "MonthlyRate", "DailyRate", "TotWorkExp")
OverTimeTable <- as.data.frame(table(df$OverTime))
OverTimeTable <- data.frame(OverTimeTable[,-1], row.names = OverTimeTable[,1])
col.names(OverTimeTable) <- c("Freq")
col.names(OverTimeTable)
colnames(OverTimeTable)
SummaryStat <- matrix(ncol = 6, nrow = 0)
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyInco))
SummaryStat <- rbind(SummaryStat, summary(df$Age))
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyRate))
SummaryStat <- rbind(SummaryStat, summary(df$DailyRate))
SummaryStat <- rbind(SummaryStat, summary(df$TotWorkExp))
SummaryStat <- as.data.frame(SummaryStat)
row.names(SummaryStat) <- c("MonthlyInco", "Age", "MonthlyRate", "DailyRate", "TotWorkExp")
OverTimeTable <- as.data.frame(table(df$OverTime))
OverTimeTable <- data.frame(OverTimeTable[,-1], row.names = OverTimeTable[,1])
colnames(OverTimeTable) <- c("Freq")
JobRoleTable <- as.data.frame(table(df$JobRole))
JobRoleTable <- data.frame(JobRoleTable[,-1], row.names = JobRoleTable[,1])
colnames(JobRoleTable) <- c("Freq")
SummaryStat
OverTimeTable
JobRoleTable
hist(df$MonthlyInco)
hist(df$Age)
SummaryStat <- matrix(ncol = 6, nrow = 0)
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyInco))
SummaryStat <- rbind(SummaryStat, summary(df$Age))
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyRate))
SummaryStat <- rbind(SummaryStat, summary(df$DailyRate))
SummaryStat <- rbind(SummaryStat, summary(df$TotWorkExp))
SummaryStat <- as.data.frame(SummaryStat)
row.names(SummaryStat) <- c("MonthlyInco", "Age", "MonthlyRate", "DailyRate", "TotWorkExp")
OverTimeTable <- as.data.frame(table(df$OverTime))
OverTimeTable <- data.frame(OverTimeTable[,-1], row.names = OverTimeTable[,1])
colnames(OverTimeTable) <- c("Freq")
JobRoleTable <- as.data.frame(table(df$JobRole))
JobRoleTable <- data.frame(JobRoleTable[,-1], row.names = JobRoleTable[,1])
colnames(JobRoleTable) <- c("Freq")
SummaryStat
OverTimeTable
JobRoleTable
hist(df$MonthlyInco, main = "Monthly Income", xlab = "USD")
hist(df$Age, main = "Age", xlab = "Years")
ggplot(df, aes(x = OverTime, fill = Attrition)) + geom_bar(position = "fill") + labs(title = "Over Time", x = "Over Time", y = "", color = "")+ scale_y_continuous(labels = scales::percent)
ggplot(df, aes(x = OverTime, fill = Attrition)) + geom_bar(position = "fill") + labs(title = "Over Time", x = "Over Time", y = "", color = "")+ scale_y_continuous(labels = scales::percent)
library(ggplot2)
ggplot(df, aes(x = OverTime, fill = Attrition)) + geom_bar(position = "fill") + labs(title = "Over Time", x = "Over Time", y = "", color = "")+ scale_y_continuous(labels = scales::percent)
ggplot(df, aes(x = StockOptLvl, fill = Attrition)) + geom_bar(position = "fill") + labs(title = "Stock Option Level", x = "Stock Option Levels", y = "", color = "")+ scale_y_continuous(labels = scales::percent)
ggplot(df, aes(x = HourlyRate, fill = Attrition)) + geom_histogram(position = "fill", bins = 30) + labs(title = "Hourly Rate", x = "Hourly Rate", y = "", color = "")+ scale_y_continuous(labels = scales::percent)
ggplot(df, aes(x = DailyRate, fill = Attrition)) + geom_histogram(position = "fill", bins = 30) + labs(title = "Daily Rate", x = "Daily Rate", y = "", color = "")+ scale_y_continuous(labels = scales::percent)
ggplot(df, aes(x = MonthlyRate, fill = Attrition)) + geom_histogram(position = "fill", bins = 30) + labs(title = "Monthly Rate", x = "Monthly Rate", y = "", color = "")+ scale_y_continuous(labels = scales::percent)
ggplot(df, aes(x = MonthlyInco, fill = Attrition)) + geom_histogram(position = "fill", bins = 30) + labs(title = "Monthly Income", x = "Monthly Income", y = "", color = "")+ scale_y_continuous(labels = scales::percent)
ggplot(df, aes(x = PctSalaryInc, fill = Attrition)) + geom_bar(position = "fill") + labs(title = "Percent Salary Increase", x = "Salary Increase (%)", y = "", color = "")+ scale_y_continuous(labels = scales::percent)
ggplot(df, aes(reorder(x = DailyRate), fill = Attrition)) + geom_histogram(position = "fill", bins = 30) + labs(title = "Daily Rate", x = "Daily Rate", y = "", color = "")+ scale_y_continuous(labels = scales::percent)
ggplot(df, aes(reorder(x = PctSalaryInc), fill = Attrition)) + geom_bar(position = "fill") + labs(title = "Percent Salary Increase", x = "Salary Increase (%)", y = "", color = "")+ scale_y_continuous(labels = scales::percent)
ggplot(df, aes(reorder(x = PctSalaryInc, -Attrition), fill = Attrition)) + geom_bar(position = "fill") + labs(title = "Percent Salary Increase", x = "Salary Increase (%)", y = "", color = "")+ scale_y_continuous(labels = scales::percent)
ggplot(df, aes(reorder(x = PctSalaryInc, -PctSallaryInc), fill = Attrition)) + geom_bar(position = "fill") + labs(title = "Percent Salary Increase", x = "Salary Increase (%)", y = "", color = "")+ scale_y_continuous(labels = scales::percent)
ggplot(df, aes(reorder(x = PctSalaryInc, -PctSalaryInc), fill = Attrition)) + geom_bar(position = "fill") + labs(title = "Percent Salary Increase", x = "Salary Increase (%)", y = "", color = "")+ scale_y_continuous(labels = scales::percent)
library(ggplot2)
ggplot(df, aes(reorder(x = JobRole, JobRole))) + geom_bar(stat = "count")
ggplot(df, aes(reorder(x = JobRole, JobRole))) + geom_bar(stat = "count")
ggplot(df, aes(x = JobRole)) + geom_bar(stat = "count")
ggplot(df, aes(x = JobRole)) + geom_bar(stat = "count")
ggplot(JobRoleTable, aes(y="freq")) + geom_bar(stat = "identity")
JobRoleTable
ggplot(JobRoleTable, aes(x=row.names(JobRoleTable), y="Freq")) + geom_bar(stat = "identity")
ggplot(JobRoleTable, aes(x=row.names(JobRoleTable)) + geom_bar(stat = "identity")
)
ggplot(JobRoleTable, aes(x=row.names(JobRoleTable))) + geom_bar(stat = "identity")
ggplot(JobRoleTable, aes(x=row.names(JobRoleTable), y=Freq)) + geom_bar(stat = "identity")
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity")
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employee")
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employee")
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employee", x = "") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employee", x = "") + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employee", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1))
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1)) + scale_fill_brewer(palette="Spectral")
library(RColorBrewer)
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1)) + scale_fill_brewer(palette="Spectral")
installed.packages("RColorBrewer")
library(RColorBrewer)
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1)) + scale_fill_brewer(palette="Spectral")
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1)) + scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity" (aes(fill=row.names(JobRoleTable)))) + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1))
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq), fill=row.names(JobRoleTable)) + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1))
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq), fill=row.names(JobRoleTable)) + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1)) + scale_fill_brewer(palette="Spectral")
#Create a table of summary statistics of Variables with numerical values
SummaryStat <- matrix(ncol = 6, nrow = 0)
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyInco))
SummaryStat <- rbind(SummaryStat, summary(df$Age))
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyRate))
SummaryStat <- rbind(SummaryStat, summary(df$DailyRate))
SummaryStat <- rbind(SummaryStat, summary(df$TotWorkExp))
SummaryStat <- as.data.frame(SummaryStat)
row.names(SummaryStat) <- c("MonthlyInco", "Age", "MonthlyRate", "DailyRate", "TotWorkExp")
#Create table with summary of variables with categorial variables
OverTimeTable <- as.data.frame(table(df$OverTime))
OverTimeTable <- data.frame(OverTimeTable[,-1], row.names = OverTimeTable[,1])
colnames(OverTimeTable) <- c("Freq")
JobRoleTable <- as.data.frame(table(df$JobRole))
JobRoleTable <- data.frame(JobRoleTable[,-1], row.names = JobRoleTable[,1])
colnames(JobRoleTable) <- c("Freq")
#Summary statistics
SummaryStat
OverTimeTable
JobRoleTable
#Barplot of Job role
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq), fill=row.names(JobRoleTable)) + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1)) + scale_fill_brewer(palette="Spectral")
hist(df$MonthlyInco, main = "Monthly Income", xlab = "USD")
#Monthly Income is extremely left skewed around $5000
hist(df$Age, main = "Age", xlab = "Years")
#Age is slightly left skewed around 36 years of age
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(colour = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, colour = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_fill_manual(values = c("red", "green"))
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(colour = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, colour = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_fill_manual(values = c("purple", "green"))
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(colour = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, colour = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_fill_manual(breaks = c("Male", "Female"), values = c("purple", "green"))
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(fill = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, fill = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_fill_manual(breaks = c("Male", "Female"), values = c("purple", "green"))
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(fill = Gender)) + geom_smooth(method = "lm", aes(group = Gender, fill = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", fill = "Gender") + scale_fill_manual(breaks = c("Male", "Female"), values = c("purple", "green"))
ggplot(data = df, aes(x = Age, y = MonthlyRate), fill = Gender) + geom_point() + geom_smooth(method = "lm", aes(group = Gender, fill = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", fill = "Gender") + scale_fill_manual(breaks = c("Male", "Female"), values = c("purple", "green"))
ggplot(data = df, aes(x = Age, y = MonthlyRate), fill = as.factor(Gender)) + geom_point() + geom_smooth(method = "lm", aes(group = Gender, fill = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", fill = "Gender") + scale_fill_manual(breaks = c("Male", "Female"), values = c("purple", "green"))
ggplot(data = df, aes(x = Age, y = MonthlyRate), fill = as.factor(Gender)) + geom_point() + geom_smooth(method = "lm", aes(group = Gender, fill = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", fill = "Gender")
ggplot(data = df, aes(x = Age, y = MonthlyRate), color = as.factor(Gender)) + geom_point() + geom_smooth(method = "lm", aes(group = Gender, fill = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", fill = "Gender")
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(colour = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, colour = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_colour_manual(values=c("green", "red"))
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(colour = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, colour = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_colour_manual(values=c("blue", "red"))
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(colour = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, colour = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_colour_manual(values=c("blue", "red"))
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(colour = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, colour = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_colour_manual(values=c("blue", "green"))
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(colour = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, colour = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_colour_manual(values=c("yello", "green"))
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(colour = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, colour = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_colour_manual(values=c("yellow", "green"))
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(colour = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, colour = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_colour_manual(values=c("light blue", "green"))
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(colour = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, colour = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_colour_manual(values=c("mangenta", "green"))
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(colour = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, colour = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_colour_manual(values=c("magenta", "green"))
ggplot(df, aes(x = OverTime, color = Attrition)) + geom_bar(position = "fill") + labs(title = "Over Time", x = "Over Time", y = "", color = "")+ scale_y_continuous(labels = scales::percent)
ggplot(df, aes(x = OverTime, color = Attrition)) + geom_bar(position = "fill") + labs(title = "Over Time", x = "Over Time", y = "", color = "")+ scale_y_continuous(labels = scales::percent) + scale_colour_manual(values=c("magenta", "green"))
ggplot(df, aes(x = OverTime, color = Attrition)) + geom_bar(position = "fill") + labs(title = "Over Time", x = "Over Time", y = "", colour = "")+ scale_y_continuous(labels = scales::percent) + scale_colour_manual(values=c("magenta", "green"))
ggplot(df, aes(x = OverTime, fill = Attrition)) + geom_bar(position = "fill") + labs(title = "Over Time", x = "Over Time", y = "", color = "")+ scale_y_continuous(labels = scales::percent) + scale_fill_manual(values=c("red", "green"))
ggplot(df, aes(x = OverTime, fill = Attrition)) + geom_bar(position = "fill") + labs(title = "Over Time", x = "Over Time", y = "", color = "")+ scale_y_continuous(labels = scales::percent) + scale_fill_manual(values=c("blue", "orange"))
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq), fill=row.names(JobRoleTable)) + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1)) + scale_fill_brewer(palette="Spectral")
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq), fill = Freq + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1)) + scale_fill_brewer(palette="Spectral")
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq), fill = Freq) + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1)) + scale_fill_brewer(palette="Spectral")
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq), fill = Freq) + geom_bar(stat = "identity") + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1))
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq), fill = Freq) + geom_bar(stat = "identity")
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity", aes(fill=Freq))
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity", aes(fill=row.names(JobRoleTable)))
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity", aes(fill = row.names(JobRoleTable))) + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1)) + scale_fill_brewer(palette="Spectral")
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity", aes(fill = row.names(JobRoleTable))) + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1), legend.position="none") + scale_fill_brewer(palette="Spectral")
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(colour = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, colour = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_colour_manual(values=c("teal", "dark orange"))
display.brewer.all()
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(colour = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, colour = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_colour_manual(values=c(brewer.pal(9, "Spectral"), brewer.pal(3, "Spectral")))
brewer.pal(9, "Spectral")
brewer.pal(11, "Spectral")
ggplot(data = df, aes(x = Age, y = MonthlyRate)) + geom_point(aes(colour = factor(Gender))) + geom_smooth(method = "lm", aes(group = Gender, colour = Gender)) + labs(title = "Montly Rate vs Age", x = "Age", y = "Monthly Rate", color = "Gender") + scale_colour_manual(values=c(brewer.pal(9, "Spectral")[1], brewer.pal(9, "Spectral")[9]))
ggplot(df, aes(x = OverTime, fill = Attrition)) + geom_bar(position = "fill") + labs(title = "Over Time", x = "Over Time", y = "", color = "")+ scale_y_continuous(labels = scales::percent) + scale_fill_manual(values=c(brewer.pal(13, "Spectral")[4], brewer.pal(13, "Spectral")[13]))
ggplot(df, aes(x = OverTime, fill = Attrition)) + geom_bar(position = "fill") + labs(title = "Over Time", x = "Over Time", y = "", color = "")+ scale_y_continuous(labels = scales::percent) + scale_fill_manual(values=c(brewer.pal(11, "Spectral")[4], brewer.pal(11, "Spectral")[11]))
ggplot(df, aes(x = OverTime, fill = Attrition)) + geom_bar(position = "fill") + labs(title = "Over Time", x = "Over Time", y = "", color = "")+ scale_y_continuous(labels = scales::percent) + scale_fill_manual(values=c(brewer.pal(11, "Spectral")[3], brewer.pal(11, "Spectral")[10]))
ggplot(df, aes(MonthlyInco)) + geom_histogram() + labs(title = "Monthly Income", y = "USD", x = "") + scale_fill_brewer(palette="Spectral")
hist(df$MonthlyInco, main = "Monthly Income", xlab = "USD")
ggplot(df, aes(MonthlyInco)) + geom_histogram(bins = 30, position = "fill") + labs(title = "Monthly Income", y = "USD", x = "") + scale_fill_brewer(palette="Spectral")
ggplot(df, aes(MonthlyInco)) + geom_histogram(color = brewer.pal(11, "Spectral")[6]) + labs(title = "Monthly Income", y = "USD", x = "")
ggplot(df, aes(MonthlyInco)) + geom_histogram(aes(color = brewer.pal(11, "Spectral")[6]), bins = 30) + labs(title = "Monthly Income", y = "USD", x = "")
ggplot(df, aes(MonthlyInco)) + geom_histogram(aes(fill = brewer.pal(11, "Spectral")[6]), bins = 30) + labs(title = "Monthly Income", y = "USD", x = "")
ggplot(df, aes(MonthlyInco)) + geom_histogram(aes(fill = brewer.pal(11, "Spectral")[3]), bins = 30) + labs(title = "Monthly Income", y = "USD", x = "")
ggplot(df, aes(MonthlyInco)) + geom_histogram(aes(fill = brewer.pal(11, "Spectral")[11]), bins = 30) + labs(title = "Monthly Income", y = "USD", x = "")
ggplot(df, aes(MonthlyInco)) + geom_histogram(bins = 30) + labs(title = "Monthly Income", y = "USD", x = "")
ggplot(df, aes(MonthlyInco)) + geom_histogram(aes(fill = "white", color = "black"), bins = 30) + labs(title = "Monthly Income", y = "USD", x = "")
ggplot(df, aes(MonthlyInco)) + geom_histogram(aes(fill = "white"), bins = 30) + labs(title = "Monthly Income", y = "USD", x = "")
ggplot(df, aes(MonthlyInco)) + geom_histogram(aes(color = "white"), bins = 30) + labs(title = "Monthly Income", y = "USD", x = "")
ggplot(df, aes(MonthlyInco)) + geom_histogram(aes(fill = MonthlyInco), bins = 30) + labs(title = "Monthly Income", y = "USD", x = "")
ggplot(df, aes(MonthlyInco)) + geom_histogram(aes(fill = MonthlyInco), bins = 30) + labs(title = "Monthly Income", y = "USD", x = "") + scale_fill_brewer(palatte = "Spectral")
ggplot(df, aes(MonthlyInco)) + geom_histogram(aes(fill = MonthlyInco), bins = 30) + labs(title = "Monthly Income", y = "USD", x = "") + scale_fill_brewer(palette = "Spectral")
ggplot(df, aes(MonthlyInco)) + geom_histogram(aes(fill = MonthlyInco), bins = 30) + labs(title = "Monthly Income", y = "USD", x = "") + scale_fill_manual(value = "red")
ggplot(df, aes(MonthlyInco)) + geom_histogram(bins = 30) + labs(title = "Monthly Income", y = "USD", x = "") + scale_fill_manual(value = "red")
ggplot(df, aes(MonthlyInco)) + geom_histogram() + labs(title = "Monthly Income", y = "USD", x = "")
ggplot(df, aes(MonthlyInco)) + geom_histogram() + labs(title = "Monthly Income", y = "USD", x = "")
#Monthly Income is extremely left skewed around $5000
ggplot(df, aes(MonthlyInco)) + geom_histogram(bins = 30) + labs(title = "Monthly Income", y = "USD", x = "")
#Age is slightly left skewed around 36 years of age
ggplot(df, aes(Age)) + geom_histogram(bins = 30) + labs(title = "Monthly Income", y = "USD", x = "")
hist(df$MonthlyInco, main = "Employee's Ages", xlab = "Years")
ggplot(df, aes(Age)) + geom_histogram(bins = 30) + labs(title = "Monthly Income", y = "USD", x = "")
ggplot(df, aes(Age)) + geom_histogram(bins = 30) + labs(title = "Monthly Income", y = "USD", x = "")
ggplot(df, aes(Age)) + geom_histogram(bins = 30) + labs(title = "Employee's Ages", y = "Years", x = "")
ggplot(df, aes(Age)) + geom_histogram(bins = 30) + labs(title = "Employee's Ages", y = "Years", x = "")
hist(df$MonthlyInco, main = "Employee's Ages", xlab = "Years")
ggplot(df, aes(MonthlyInco)) + geom_histogram(bins = 30) + labs(title = "Monthly Income", y = "Employees", x = "USD")
ggplot(df, aes(MonthlyInco)) + geom_histogram(bins = 30) + labs(title = "Monthly Income", y = "Employees", x = "USD")
hist(df$MonthlyInco, main = "Employee's Ages", xlab = "Years")
ggplot(df, aes(Age)) + geom_histogram(bins = 30) + labs(title = "Employee's Ages", y = "Employees", x = "Years")
ggplot(df, aes(Age)) + geom_histogram(bins = 30) + labs(title = "Employee's Ages", y = "Employees", x = "Years")
hist(df$Age, main = "Employee's Ages", xlab = "Years")
ggplot(df, aes(MonthlyInco)) + geom_histogram(color="black", fill="white", bins = 30) + labs(title = "Monthly Income", y = "Employees", x = "USD")
ggplot(df, aes(Age)) + geom_histogram(color = color="black", fill="white", fill = "white", bins = 30) + labs(title = "Employee's Ages", y = "Employees", x = "Years")
ggplot(df, aes(Age)) + geom_histogram(color = brewer.pal(11, "Spectral")[5], fill="white", fill = "white", bins = 30) + labs(title = "Employee's Ages", y = "Employees", x = "Years")
ggplot(df, aes(Age)) + geom_histogram(color = brewer.pal(11, "Spectral")[7], fill = "white", bins = 30) + labs(title = "Employee's Ages", y = "Employees", x = "Years")
ggplot(df, aes(Age)) + geom_histogram(color = brewer.pal(11, "Spectral")[9], fill = "white", bins = 30) + labs(title = "Employee's Ages", y = "Employees", x = "Years")
ggplot(df, aes(Age)) + geom_histogram(color = brewer.pal(11, "Spectral")[4], fill = "white", bins = 30) + labs(title = "Employee's Ages", y = "Employees", x = "Years")
SummaryStat <- matrix(ncol = 6, nrow = 0)
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyInco))
SummaryStat <- rbind(SummaryStat, summary(df$Age))
SummaryStat <- rbind(SummaryStat, summary(df$OverTime))
SummaryStat <- rbind(SummaryStat, summary(df$JobRole))
SummaryStat <- rbind(SummaryStat, summary(df$MonthlyRate))
SummaryStat <- rbind(SummaryStat, summary(df$DailyRate))
SummaryStat <- rbind(SummaryStat, summary(df$TotWorkExp))
SummaryStat <- as.data.frame(SummaryStat)
SummaryStat
ggplot(data = df, aes(x = Age, y = MonthlyInco)) + geom_point(aes(colour = Gender)) + geom_smooth(method = 'lm', aes(group = Gender, colour = Gender)) + labs(title = "Montly Income vs Age", x = "Age", y = "Monthly Income", color = "Gender") + scale_colour_manual(values=c(brewer.pal(11, "Spectral")[1], brewer.pal(11, "Spectral")[9]))
library(ggplot2)
ggplot(data = df, aes(x = Age, y = MonthlyInco)) + geom_point(aes(colour = Gender)) + geom_smooth(method = 'lm', aes(group = Gender, colour = Gender)) + labs(title = "Montly Income vs Age", x = "Age", y = "Monthly Income", color = "Gender") + scale_colour_manual(values=c(brewer.pal(11, "Spectral")[1], brewer.pal(11, "Spectral")[9]))
librar(RColorBrewer)
library(RColorBrewer)
ggplot(data = df, aes(x = Age, y = MonthlyInco)) + geom_point(aes(colour = Gender)) + geom_smooth(method = 'lm', aes(group = Gender, colour = Gender)) + labs(title = "Montly Income vs Age", x = "Age", y = "Monthly Income", color = "Gender") + scale_colour_manual(values=c(brewer.pal(11, "Spectral")[1], brewer.pal(11, "Spectral")[9]))
ggplot(df, aes(MonthlyInco)) + geom_histogram(color = brewer.pal(11, "Spectral")[5], fill = brewer.pal(11, "Spectral")[4], bins = 30) + labs(title = "Monthly Income", y = "Employees", x = "USD")
#Age is slightly left skewed around 36 years of age
ggplot(df, aes(Age)) + geom_histogram(color = brewer.pal(11, "Spectral")[5], fill = brewer.pal(11, "Spectral")[4], bins = 30) + labs(title = "Employee's Ages", y = "Employees", x = "Years")
ggplot(df, aes(MonthlyInco)) + geom_histogram(color = brewer.pal(11, "Spectral")[5], fill = brewer.pal(11, "Spectral")[4], bins = 30) + labs(title = "Monthly Income", y = "Employees", x = "USD")
ggplot(df, aes(Age)) + geom_histogram(color = brewer.pal(11, "Spectral")[5], fill = brewer.pal(11, "Spectral")[4], bins = 30) + labs(title = "Employee's Ages", y = "Employees", x = "Years")
#Barplot of Job role
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity", aes(fill = row.names(JobRoleTable))) + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1), legend.position="none") + scale_fill_brewer(palette="Spectral")
ggplot(JobRoleTable, aes(reorder(x=row.names(JobRoleTable), -Freq), y=Freq)) + geom_bar(stat = "identity", aes(fill = row.names(JobRoleTable))) + labs(title = "Employees per Job Role", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1), legend.position="none") + scale_fill_brewer(palette="Spectral")
ggplot(OverTimeTable, aes(reorder(x=row.names(OverTimeTable), -Freq), y=Freq)) + geom_bar(stat = "identity", aes(fill = row.names(OverTimeTable))) + labs(title = "Employees with Over Time", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 15, hjust = 1), legend.position="none") + scale_fill_brewer(palette="Spectral")
ggplot(OverTimeTable, aes(reorder(x=row.names(OverTimeTable), -Freq), y=Freq)) + geom_bar(stat = "identity", aes(fill = row.names(OverTimeTable))) + labs(title = "Employees with Over Time", y = "Number of Employees", x = "") + theme(axis.text.x = element_text(angle = 0, hjust = 1), legend.position="none") + scale_fill_brewer(palette="Spectral")
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre7')
# In order to import XLSX, we install the package "readxl" into our environment.  After loading library "readxl" we're able to use read_excel function to import the sheet "HR-employee-attrition Data" into a dataframe.
library(ggplot2)
library(readxl)
library(randomForest)
library(stringr)
library(dplyr)
library(tidyr)
library(xlsx)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre1.9.0_181')
# In order to import XLSX, we install the package "readxl" into our environment.  After loading library "readxl" we're able to use read_excel function to import the sheet "HR-employee-attrition Data" into a dataframe.
library(ggplot2)
library(readxl)
library(randomForest)
library(stringr)
library(dplyr)
library(tidyr)
library(xlsx)
library(rJava)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre-10.0.2)
)
Sys.setenv(JAVA_HOME='C:\\Program Files\\Java\\jre-10.0.2')
# In order to import XLSX, we install the package "readxl" into our environment.  After loading library "readxl" we're able to use read_excel function to import the sheet "HR-employee-attrition Data" into a dataframe.
library(ggplot2)
library(readxl)
library(randomForest)
library(stringr)
library(dplyr)
library(tidyr)
library(xlsx)
library(reshape2)
library(party)
library(gmodels)
library(vcd)
library(caret)
library(e1071)
library(tm)
library(SnowballC)
library(wordcloud)
library(RColorBrewer)
sessionInfo()
attritionDF <- read_excel(path = "Attrition_Data_Clean.xlsx", sheet = "HR-employee-attrition Data")
exit
trainDF <- read.csv("masterAN.csv", header = T, stringsAsFactors = F)
setwd("C:/Users/anhai/Desktop/SMU/MSDS6371_Final_Project")
trainDF <- read.csv("masterAN.csv", header = T, stringsAsFactors = F)
titles <- names(trainDF)
for (i in 1:length(trainDF)){
if (is.character(trainDF[[i]])){
boxplot(trainDF$SalePrice~trainDF[[i]], main = paste("Sale price vs ", titles[i], sep=""),
xlab = title[i], ylab = "Sale price", horizontal = T, las = 1)
}
else if (is.integer(trainDF[[i]])){
plot(x = trainDF[[i]], y = trainDF$SalePrice, main = main = paste("Sale price vs ", titles[i], sep=""),
trainDF <- read.csv("masterAN.csv", header = T, stringsAsFactors = F)
titles <- names(trainDF)
for (i in 1:length(trainDF)){
if (is.character(trainDF[[i]])){
boxplot(trainDF$SalePrice~trainDF[[i]], main = paste("Sale price vs ", titles[i], sep=""),
xlab = title[i], ylab = "Sale price", horizontal = T, las = 1)
}
else if (is.integer(trainDF[[i]])){
plot(x = trainDF[[i]], y = trainDF$SalePrice, main = paste("Sale price vs ", titles[i], sep=""),
xlab = title[i], ylab = "Sale price")
}
}
trainDF <- read.csv("masterAN.csv", header = T, stringsAsFactors = F)
titles <- c(names(trainDF)
for (i in 1:length(trainDF)){
titles <- names(trainDF)
titles
str(titles)
titles[3]
trainDF <- read.csv("masterAN.csv", header = T, stringsAsFactors = F)
titles <- names(trainDF)
for (i in 1:length(trainDF)){
if (is.character(trainDF[[i]])){
boxplot(trainDF$SalePrice~trainDF[[i]], main = paste("Sale price vs ", titles[i], sep=""),
xlab = title[i], ylab = "Sale price", horizontal = T, las = 1)
}
else if (is.integer(trainDF[[i]])){
plot(x = trainDF[[i]], y = trainDF$SalePrice, main = paste("Sale price vs ", titles[i], sep=""),
xlab = title[i], ylab = "Sale price")
}
}
boxplot(trainDF$SalePrice~trainDF[[3]], main = paste("Sale price vs ", titles[3], sep=""),
xlab = title[3], ylab = "Sale price", horizontal = T, las = 1)
trainDF <- read.csv("masterAN.csv", header = T, stringsAsFactors = F)
titles <- names(trainDF)
for (i in 1:length(trainDF)){
if (is.character(trainDF[[i]])){
boxplot(trainDF$SalePrice~trainDF[[i]], main = paste("Sale price vs ", titles[i], sep=""), xlab = title[i], ylab = "Sale price", horizontal = T, las = 1)
}
else if (is.integer(trainDF[[i]])){
plot(x = trainDF[[i]], y = trainDF$SalePrice, main = paste("Sale price vs ", titles[i], sep=""),
xlab = title[i], ylab = "Sale price")
}
}
trainDF <- read.csv("masterAN.csv", header = T, stringsAsFactors = F)
titles <- names(trainDF)
for (i in 1:length(trainDF)){
if (is.character(trainDF[[i]])){
boxplot(trainDF$SalePrice~trainDF[[i]], main = paste("Sale price vs ", sep=""), xlab = "", ylab = "Sale price", horizontal = T, las = 1)
}
else if (is.integer(trainDF[[i]])){
plot(x = trainDF[[i]], y = trainDF$SalePrice, main = paste("Sale price vs ", titles[i], sep=""),
xlab = title[i], ylab = "Sale price")
}
}
trainDF <- read.csv("masterAN.csv", header = T, stringsAsFactors = F)
titles <- names(trainDF)
for (i in 1:length(trainDF)){
if (is.character(trainDF[[i]])){
boxplot(trainDF$SalePrice~trainDF[[i]], main = paste("Sale price vs ", sep=""), xlab = "", ylab = "Sale price", horizontal = T, las = 1)
}
else if (is.integer(trainDF[[i]])){
plot(x = trainDF[[i]], y = trainDF$SalePrice, main = paste("Sale price vs ", sep=""),
xlab = "", ylab = "Sale price")
}
}
boxplot(trainDF$SalePrice~trainDF[[3]], main = paste("Sale price vs ", sep=""), xlab = "", ylab = "Sale price", horizontal = T, las = 1)
boxplot(trainDF$SalePrice~trainDF[[4]], main = paste("Sale price vs ", sep=""), xlab = "", ylab = "Sale price", horizontal = T, las = 1)
boxplot(trainDF[[i]]~trainDF$SalePrice, main = paste("Sale price vs ", titles[i], sep=""),
xlab = title[i], ylab = "Sale price", horizontal = T, las = 1)
boxplot(trainDF[[i]]~trainDF$SalePrice, horizontal = T, las = 1)
boxplot(trainDF[[3]]~trainDF$SalePrice, horizontal = T, las = 1)
boxplot(trainDF[[4]]~trainDF$SalePrice, horizontal = T, las = 1)
str(trainDF)
boxplot(trainDF[[3]]~trainDF$SalePrice, horizontal = T, las = 1)
trainDF2 <- subset(trainDF[,1:1470])
trainDF2 <- subset(trainDF[1:1470,])
trainDF <- read.csv("masterAN.csv", header = T, stringsAsFactors = F)
trainDF <- subset(trainDF[1:1470,])
trainDF$SalePrice <- as.integer(trainDF$SalePrice)
titles <- names(trainDF)
for (i in 1:length(trainDF)){
if (is.character(trainDF[[i]])){
boxplot(trainDF$SalePrice ~ trainDF[[i]], main = paste("Sale price vs ", sep=""), xlab = "", ylab = "Sale price", horizontal = T, las = 1)
}
else if (is.integer(trainDF[[i]])){
plot(x = trainDF[[i]], y = trainDF$SalePrice, main = paste("Sale price vs ", sep=""),
xlab = "", ylab = "Sale price")
}
}
trainDF <- read.csv("masterAN.csv", header = T, stringsAsFactors = F)
trainDF <- subset(trainDF[1:1470,])
trainDF$SalePrice <- as.integer(trainDF$SalePrice)
titles <- names(trainDF)
View(trainDF)
boxplot(trainDF$SalePrice ~ trainDF[[3]], main = paste("Sale price vs ", sep=""), xlab = "", ylab = "Sale price", horizontal = T, las = 1)
boxplot(trainDF$SalePrice ~ trainDF[[3]], main = paste("Sale price vs ", title[3], sep=""), xlab = "", ylab = "Sale price", horizontal = T, las = 1)
boxplot(trainDF$SalePrice ~ trainDF[[3]], main = paste("Sale price vs ", titles[3], sep=""), xlab = "", ylab = "Sale price", horizontal = T, las = 1)
trainDF <- read.csv("masterAN.csv", header = T, stringsAsFactors = F)
trainDF <- subset(trainDF[1:1470,])
trainDF$SalePrice <- as.integer(trainDF$SalePrice)
titles <- names(trainDF)
for (i in 1:length(trainDF)){
if (is.character(trainDF[[i]])){
boxplot(trainDF$SalePrice ~ trainDF[[i]], main = paste("Sale price vs ", titles[i], sep=""), xlab = titles[i], ylab = "Sale price", horizontal = T, las = 1)
}
else if (is.integer(trainDF[[i]])){
plot(x = trainDF[[i]], y = trainDF$SalePrice, main = paste("Sale price vs ", titles[i], sep=""), xlab = titles[i], ylab = "Sale price")
}
}
trainDF <- read.csv("masterAN.csv", header = T, stringsAsFactors = F)
trainDF <- subset(trainDF[1:1470,])
trainDF$SalePrice <- as.integer(trainDF$SalePrice)
titles <- names(trainDF)
for (i in 1:length(trainDF)){
if (is.character(trainDF[[i]])){
boxplot(trainDF$SalePrice ~ trainDF[[i]], main = paste("Sale price vs ", titles[i], sep=""), xlab = titles[i], ylab = "Sale price", horizontal = T, las = 1)
}
}
trainDF <- read.csv("masterAN.csv", header = T, stringsAsFactors = F)
trainDF <- subset(trainDF[1:1470,])
trainDF$SalePrice <- as.integer(trainDF$SalePrice)
titles <- names(trainDF)
for (i in 1:length(trainDF)){
if (is.integer(trainDF[[i]])){
plot(x = trainDF[[i]], y = trainDF$SalePrice, main = paste("Sale price vs ", titles[i], sep=""), xlab = titles[i], ylab = "Sale price")
}
}
trainDF <- read.csv("masterAN.csv", header = T, stringsAsFactors = F)
trainDF <- subset(trainDF[1:1470,])
trainDF$SalePrice <- as.integer(trainDF$SalePrice)
titles <- names(trainDF)
for (i in 1:length(trainDF)){
if (is.character(trainDF[[i]])){
boxplot(trainDF$SalePrice ~ trainDF[[i]], main = paste("Sale price vs ", titles[i], sep=""), xlab = titles[i], ylab = "Sale price", horizontal = T, las = 1)
}
else if (is.integer(trainDF[[i]])){
plot(x = trainDF[[i]], y = trainDF$SalePrice, main = paste("Sale price vs ", titles[i], sep=""), xlab = titles[i], ylab = "Sale price")
}
}
